!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("svg.js")):"function"==typeof define&&define.amd?define(["svg"],n):"object"==typeof exports?exports.SVG=n(require("svg.js")):t.SVG=n(t.SVG)}(this,function(t){return function(t){function n(e){if(i[e])return i[e].exports;var o=i[e]={exports:{},id:e,loaded:!1};return t[e].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}var i={};return n.m=t,n.c=i,n.p="",n(0)}([function(t,n,i){var e=i(1);t.exports=e;var o=e.Point;e.Point=function(t,n){return null==n&&(n=t),o.call(this,t,n)},e.Point.prototype=o.prototype,e.extend(e.Point,{morph:function(t,n){return this.destination=new e.Point(t,n),this}}),e.extend(e.Point,{plus:function(t,n){var i=new e.Point(t,n);return new e.Point(this.x+i.x,this.y+i.y)},minus:function(t,n){var i=new e.Point(t,n);return new e.Point(this.x-i.x,this.y-i.y)},times:function(t,n){var i=new e.Point(t,n);return new e.Point(this.x*i.x,this.y*i.y)},divide:function(t,n){var i=new e.Point(t,n);return new e.Point(this.x/i.x,this.y/i.y)},equal:function(t,n){var i=new e.Point(t,n);return this.x===i.x&&this.y===i.y},toArray:function(){return[this.x,this.y]},norm:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},distance:function(t,n){return this.minus(t,n).norm()}})},function(n,i){n.exports=t}])});